
def example_function(params)
    -Location
    -Return
    -Usability
    -Importing
    -More info

____________________________________________

David Xu:

def get_distance(x1,y1,x2,y2,x3,y3,x4,y4,face1Dist,face2Dist,imagePixelWidth,camAngle)
    -Located in Social_Distancing_Detection/image_handling/distance_calculations/distance_calculation.py
    -Returns the distance between two faces
    -Works as expected, but not necessarily mathematically correct
    -"from image_handling import get_distance"
    -Look at file for more info

def get_distance(x1, y1, x2, y2, x3, y3, x4, y4, face1Size, face2Size, imagePixelWidth, camAngle)
    -Located in Social_Distancing_Detection/image_handling/distance_calculations/distance_calculation.py
    -Returns the distance between two faces
    -Not tested
    -"from image_handling import get_distance"
    -Look at file for more info
____________________________________________

Aaditya Yadav:



____________________________________________

Kush Kansara:

IMPORTING: from Social_Distancing_Detection import *

tldr;
detector = DistanceDetector(image_file)
detector.getCloseFaces()
allBreaches = detector.all_breaches
if len(allBreaches > 0):
    do not open lock

Class DistanceDetector:
    -initializing
        -detector = DistanceDetector(either image_file or image (array of pixels), adj_width (what is your intended image width?), height (what is your intended image height?))

    -important methods
        -detector.getCloseFaces(): will compute all close faces, and set values for all_faces, distances, all_breaches

    -important properties:
        -detector.distance_tolerance: what is the lowest distance that people can be with respect to each other?
        -detector.adj_width: the width of the desired image to perform calculations on
        -detector.height: the height of the desired image to perform calculations on

        IMPORTANT: the structure for a face is: {"startCord": [x, y], "endCord": [x, y]}
        #################################################################################
        -detector.all_faces: returns an array of all of the faces within the image
            -[face1, face2, etc.]
        -detector.face_distances: returns an array of the distances between all faces in the image
            -[{"faces": [face1, face2], "dist": distance}, {"faces": [face2, face3], "dist": distance}, keeps going for each distance]
        -detector.all_breaches: returns an array that contain all breaches of social distancing
            -[{"faces": [face1, face2], "dist": distance}, {"faces": [face2, face3], "dist": distance}, keeps going for each faces that break the rules]

____________________________________________

Kevin Xu:



____________________________________________

William Xu:



____________________________________________